{"ast":null,"code":"var _jsxFileName = \"/Users/molly/lighthouse/wPrivate/survey-aiya/src/components/Question.js\";\nimport React from \"react\";\nimport survey from \"../data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Question = ({\n  setFinished\n}) => {\n  const allQuestions = survey[\"questions\"];\n  const allOnlyQuestions = allQuestions.slice(0, -1);\n\n  const handleFinished = () => {\n    setFinished(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"question-section\",\n      action: \"\",\n      onSubmit: handleFinished,\n      children: [allOnlyQuestions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: question[\"answers\"][survey[\"language\"]].length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"intro-text\",\n          children: question[\"question\"][survey[\"language\"]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-answer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            children: question[\"question\"][survey[\"language\"]]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-section\",\n            children: question[\"answers\"][survey[\"language\"]].map(answerOption => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"answer-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"q1\",\n                name: question[\"id\"],\n                value: answerOption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"q1\",\n                children: answerOption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 23\n              }, this)]\n            }, question.id + answerOption, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"submit-section\",\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/molly/lighthouse/wPrivate/survey-aiya/src/components/Question.js"],"names":["React","survey","Question","setFinished","allQuestions","allOnlyQuestions","slice","handleFinished","map","question","length","answerOption","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAEpC,QAAMC,YAAY,GAAGH,MAAM,CAAC,WAAD,CAA3B;AACA,QAAMI,gBAAgB,GAAGD,YAAY,CAACE,KAAb,CAAmB,CAAnB,EAAqB,CAAC,CAAtB,CAAzB;;AACA,QAAMC,cAAc,GAAG,MAAM;AAC3BJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,MAAM,EAAC,EAA1C;AAA6C,MAAA,QAAQ,EAAEI,cAAvD;AAAA,iBACGF,gBAAgB,CAACG,GAAjB,CAAsBC,QAAD,iBACpB;AAAA,kBACIA,QAAQ,CAAC,SAAD,CAAR,CAAoBR,MAAM,CAAC,UAAD,CAA1B,EAAwCS,MAAxC,KAAmD,CAAnD,gBACA;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6BD,QAAQ,CAAC,UAAD,CAAR,CAAqBR,MAAM,CAAC,UAAD,CAA3B;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADA,gBAGA;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,sBAAgCQ,QAAQ,CAAC,UAAD,CAAR,CAAqBR,MAAM,CAAC,UAAD,CAA3B;AAAhC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,sBACGQ,QAAQ,CAAC,SAAD,CAAR,CAAoBR,MAAM,CAAC,UAAD,CAA1B,EAAwCO,GAAxC,CAA6CG,YAAD,iBAC3C;AAAG,cAAA,SAAS,EAAC,aAAb;AAAA,sCACE;AAAO,gBAAA,IAAI,EAAC,OAAZ;AAAoB,gBAAA,EAAE,EAAC,IAAvB;AAA4B,gBAAA,IAAI,EAAEF,QAAQ,CAAC,IAAD,CAA1C;AAAmD,gBAAA,KAAK,EAAEE;AAA1D;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAO,gBAAA,OAAO,EAAC,IAAf;AAAA,0BAAsBA;AAAtB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA,eAAgCF,QAAQ,CAACG,EAAT,GAAYD,YAA5C;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,SAAUF,QAAQ,CAACG,EAAnB;AAAA;AAAA;AAAA;AAAA,cADD,CADH,eAoBE;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAgD,QAAA,KAAK,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AA2BD,CAnCD;;KAAMV,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport survey from \"../data.json\";\n\nconst Question = ({ setFinished }) => {\n\n  const allQuestions = survey[\"questions\"]\n  const allOnlyQuestions = allQuestions.slice(0,-1)\n  const handleFinished = () => {\n    setFinished(true)\n  }\n\n  return (\n    <>\n      <form className=\"question-section\" action=\"\" onSubmit={handleFinished}>\n        {allOnlyQuestions.map((question) => (\n          <div key={question.id}>\n            { question[\"answers\"][survey[\"language\"]].length === 0 ? \n              <div className=\"intro-text\">{question[\"question\"][survey[\"language\"]]}</div>\n            : \n              <div className=\"question-answer\">\n                <div className=\"question-text\">{question[\"question\"][survey[\"language\"]]}</div>\n                <div className=\"answer-section\">\n                  {question[\"answers\"][survey[\"language\"]].map((answerOption) => (\n                    <p className=\"answer-list\" key={question.id+answerOption}>\n                      <input type=\"radio\" id=\"q1\" name={question[\"id\"]}  value={answerOption}/>\n                      <label htmlFor=\"q1\" >{answerOption}</label>\n                    </p>\n                  ))}\n                </div>\n              </div>\n            }\n          </div>\n        ))}\n        <input className=\"submit-section\" type=\"submit\" value=\"Submit\"/>\n      </form>\n      <br/>\n    </>\n  )\n}\n\nexport default Question; "]},"metadata":{},"sourceType":"module"}